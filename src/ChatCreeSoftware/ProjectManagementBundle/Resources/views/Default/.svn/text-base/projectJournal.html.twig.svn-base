{% extends "ProjectManagementBundle::layout.html.twig" %}

{% block stylesheet %}
    {{ parent() }}
{% endblock %}

{% block navigation %}
    {{ render(controller("ProjectManagementBundle:Navigation:navigation",{'selected': project.id + 8 })) }}
{% endblock %}

{% block projectmenu %}
       {{ render(controller("ProjectManagementBundle:Navigation:projectNavigation",{'selected': 5, 'id': project.id, 'name': project.projectName })) }}
{% endblock %}

{% block content %}
    <div id="dialog" title="Confirmation de suppression">
        Voulez-vous vraiment supprimer cette entr&eacute;e du journal ?
    </div>
    
<div class="row row-side-margin"">
    <div class="col-sm-12">
    <table id="journal" class="table table-striped table-bordered">
        <thead>
            <tr>
                <th>Date</th>
                <th>Action</th>
                <th>Auteur</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>     
        </tbody>
    </table>
    </div>
</div>
{% endblock %}
    
{% block javascript %}
$(document).ready(function() {
    oTable = $('#journal').DataTable({
        ajax: '{{path('_ajax_list_project_logbook')}}/{{project.id}}',
        autoWidth: false,
        buttons: [
            {text: '<span class="glyphicon glyphicon-plus"></span>Ajouter', className: 'New', action: function () {
                if ($('tr.new').length > 0) {
                    alert("Une nouvelle ligne est déjà en cours d'édition");
                } else {
                    var today = new Date();
                    var dd = today.getDate();
                    var mm = today.getMonth()+1; //January is 0!
                    var yyyy = today.getFullYear();

                    if(dd<10) { dd='0'+dd } 
                    if(mm<10) { mm='0'+mm } 
                    today = dd+'/'+mm+'/'+yyyy;
                    
                    var nRow = oTable.row.add({date:today, type:'', user:'{{app.user.lastname}} {{app.user.firstname}}', text:'',ip:'',locked:''}).draw(false).node();
                    $(nRow).addClass('new');
                    oTable.select.style( "api" );
                    oTable.row(".selected").deselect();
                    oTable.row( nRow ).select();
                    editRow(nRow);
                    nEditing = nRow;
                }
            }},
            {text: '<span class="glyphicon glyphicon-pencil"></span>Editer', className: 'Edit disabled', action: function ( ) {
                var row = this.row({selected: true}).node();
                
                 if ($('tr.new').length > 0) {
                    alert("Une nouvelle ligne est déjà en cours d'édition");
                } else {
                    editRow(row);
                    oTable.select.style( "api" );                    
                    nEditing = row;
                }
                
            }},
            {text: '<span class="glyphicon glyphicon-remove"></span>Supprimer', className: 'Delete selectionRequired disabled', action: function ( ) {
                var row = this.row({selected: true});
                var selected = row.data();
                var timelogId = selected['id'];

                var deleteDialog = $("#dialog");
                if( $(row.node()).hasClass( 'new' ) ) {
                    oTable.rows( row ).remove().draw(false);
                    $("a.btn.btn-default.Edit, a.btn.btn-default.selectionRequired").addClass("disabled");;
                } else {
                    $("#dialog").dialog({
                        autoOpen: false,
                        modal: true,
                        buttons: {
                            "Confirmer" : {
                                text: "Confirmer", 
                                class: "btn-primary",
                                click: function() {
                                    $(this).dialog("close");
                                    var params = "id=" + timelogId; 
								
                                    var url="{{path('_project_logbook_ajax_delete')}}";

                                    $.ajax( {
                                        type: "POST",
                                        url: url,
                                        data: params,
                                        dataType: "json",
                                        success: function( data ) {
                                            if( data.response == 200 ) {
                                                oTable.rows( row ).remove().draw(false);
                                                $("a.btn.btn-default.Edit, a.btn.btn-default.selectionRequired").addClass("disabled");;
                                            } else {
                                                alert( "Erreur lors de la suppression" );
                                            }
                                        },
                                        error: function( jqXHR, textStatus, errorThrown ) {
                                            alert( textStatus );
                                        }
                                    });
                                }
                            },
                            "Annuler" : function() {
                                $(this).dialog("close");
                            }
                        },
                        title: "Confirmation de suppression"
                    });

                    $("#dialog").dialog("open");
                }

                deleteDialog.dialog("open");
            }},
            {text: '<span class="glyphicon glyphicon-remove-circle"></span>Annuler', className: 'Cancel', action: function() {projectUtilities.cancelEdit(); } },
            {text: '<span class="glyphicon glyphicon-floppy-disk"></span>Enregistrer', className: 'Save', action: function() {
                saveRow( nEditing );
                nEditing = null;
            }},
        ],
        columns: [
            {data: 'date', width: "100px", type: "date-euro"},
            {data: 'type', width: "140px"},
            {data: 'user', width: "140px"},
            {data: 'text', width: "600px"},
        ],
        dom: 'l<"clear">Bfrtp',
        language: {
            "lengthMenu": "Afficher _MENU_ lignes par page",
            "zeroRecords": "Aucune entr&eacute;e de journal",
            "info": "Page _PAGE_ de _PAGES_",
            "infoEmpty": "Aucun devis",
            "infoFiltered": "(filtr&eacute; de _MAX_ journal)",
            "loadingRecords": "Chargement...",
                "search": "Recherche:",
                "paginate": {
                    first: " ",
                    last: " ",
                    next: " ",
                    previous: " "
                }
        },            
        order: [[0, 'desc']],
        ordering: true,
        rowId: 'id',
        select: {
            style: 'single'
        }
    });
    nEditing = null;

    $("#dialog").dialog({
        autoOpen: false,
        modal: true,
        buttons: {
            "Confirmer" : {
                text: "Confirmer", 
                class: "btn-primary",
                click: function() {
                    $(this).dialog("close");
                }
            },
            "Annuler": function() {
                $(this).dialog("close");
            }
        },
        title: "Confirmation de suppression"
    });

    $('#journal tbody').on( 'click', 'tr', function () {
        if (nEditing == null ) {
            if ( $(this).hasClass('selected') ) {
                $("a.btn.btn-default.Edit, a.btn.btn-default.selectionRequired").removeClass("disabled");
            } else {
                $("a.btn.btn-default.Edit, a.btn.btn-default.selectionRequired").addClass("disabled");;
            }
        }
    } );
    
    $( "#journal" ).keydown(function( event ) { projectUtilities.keydown( event ) } );
    
    $("a.btn.btn-default.Cancel, a.btn.btn-default.Save").hide();
});

function editRow(nRow) {
    var data = oTable.row( nRow ).data();
    var jqTds = $('>td', nRow);
    jqTds[0].innerHTML = '<input value="' + data['date'] + '" type="text" class="form-control datepicker">';
    jqTds[1].innerHTML = '<select id="action" class="form-control">{% for action in actions %}<option value="{{action.id}}">{{action.flagLabel}}</option>{% endfor %}</select>';
    jqTds[2].innerHTML = '<select id="user" class="form-control">{% for user in users %}<option value="{{user.id}}">{{user.lastname}} {{user.firstname}}</option>{% endfor %}</select>';
    jqTds[3].innerHTML = '<textarea rows="2" class="form-control">' + data['text'] + '</textarea>';

    var select = $('select#user option',nRow).filter(
        function () {
            return $(this).html() == data['user'];
        }
    ).val();
        
    if( typeof select === "undefined" ){
        select = {{app.user.id}};
    }
    $( '#user option[value="'+select+'"]', nRow).prop('selected', true);    
    $("input.datepicker").datepicker({dateFormat: "dd/mm/yy"});
    $( "input[type=text]:visible:first", nRow ).focus();
    $("a.btn.btn-default.New,a.btn.btn-default.Edit,a.btn.btn-default.selectionRequired").addClass("disabled");
    $("a.btn.btn-default.Cancel, a.btn.btn-default.Save").show();
}

function saveRow(nRow) {
    var jqInputs = $('input', nRow);
    var jqSelects = $( 'select', nRow );
    var jqTextAreas = $( 'textarea', nRow );
    
    var params = "";
    var action = "U";

    var logAction = $('option:selected',jqSelects[0]);
    var logUser = $('option:selected',jqSelects[1]);
    
    params = "";
    if ($(nRow).hasClass('new')) {
        $(nRow).removeClass('new');
        action = "C";
    } else {
        var rowId = $(nRow).attr('id');
        params = "id=" + rowId + "&";
    }

    params += "pid={{project.id}}&action=" + action + "&date=" + jqInputs[0].value + "&logtype=" + logAction.val() +
            "&user=" + logUser.val() + "&text=" + encodeURIComponent(jqTextAreas[0].value);
            
    var url = "{{ path('_project_logbook_ajax_update') }}";
    $.ajax({
        type: "POST",
        url: url,
        data: params,
        dataType: "json",
        success: function(data) {
            if (data.response == 200) {
                oTable.cell( nRow, 0 ).data( jqInputs[0].value );
                oTable.cell( nRow, 1 ).data( logAction.text() );
                oTable.cell( nRow, 2 ).data( logUser.text() );
                oTable.cell( nRow, 3 ).data( jqTextAreas[0].value );
                $(nRow).attr("id", data.id);
                oTable.row( nRow ).draw();
                oTable.select.style('single');
                $("a.btn.btn-default.New").removeClass("disabled");
                $("a.btn.btn-default.Cancel, a.btn.btn-default.Save").hide();
            } else {
                alert("Erreur lors de la mise à jour");
            }
        },
        error: function( jqXHR, textStatus, errorThrown ) {
            alert( textStatus );
            projectUtilities.restoreRow( nRow );
        }
    });
}
{% endblock %}