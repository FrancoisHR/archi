{% extends "ProjectManagementBundle::layout.html.twig" %}

{% block stylesheet %}
    {{ parent() }}
{% endblock %}

{% block navigation %}
    {{ render(controller("ProjectManagementBundle:Navigation:navigation",{'selected': project.id + 8 })) }}
{% endblock %}

{% block projectmenu %}
       {{ render(controller("ProjectManagementBundle:Navigation:projectNavigation",{'selected': 2, 'id': project.id, 'name': project.projectName })) }}
{% endblock %}

{% block content %}
    <div id="dialog" title="Confirmation de suppression">
        Voulez-vous vraiment supprimer cette t&acirc;che ?
    </div>
    
<div class="row row-side-margin"">
    <div class="col-sm-12">
    <table id="tasks" class="table table-striped table-bordered">
        <thead>
            <tr>
                <th class="taskname">Description</th>
                <th class="target">Ech&eacute;ance</th>
                <th class="finalized">Finalis&eacute;e</th>
            </tr>
        </thead>
        <tbody class="rows">
        </tbody>
    </table>
    </div>
</div>
{% endblock %}
    
{% block javascript %}
$(document).ready(function() {
    nEditing = null;

    $("#dialog").dialog({
        autoOpen: false,
        modal: true,
        buttons: {
            "Confirmer" : {
                text: "Confirmer", 
                class: "btn-primary",
                click: function() {
                    $(this).dialog("close");
                }
            },
            "Annuler" : function() {
                $(this).dialog("close");
            }
        },
        title: "Confirmation de suppression"
    });
        
    oTable = $('#tasks').DataTable( {
        ajax: "{{path('_ajax_list_project_tasks',{'id':project.id})}}",
        autoWidth: false,
        order: [[1,'desc']],
        buttons: [
            {text: '<span class="glyphicon glyphicon-plus"></span>Ajouter', className: 'New', action: function () {
                if ($('tr.new').length > 0) {
                    alert("Une nouvelle ligne est déjà en cours d'édition");
                } else {
                    var nRow = oTable.row.add(['', '', '', '']).draw(false).node();
                    $(nRow).addClass('new');
                    oTable.select.style( "api" );
                    oTable.row(".selected").deselect();
                    oTable.row( nRow ).select();
                    editRow(nRow);
                    nEditing = nRow;
                }
            }},
            {text: '<span class="glyphicon glyphicon-pencil"></span>Editer', className: 'Edit selectionRequired disabled', action: function ( ) {
                var row = this.row({selected: true}).node();
                
                if ($('tr.new').length > 0) {
                    alert("Une nouvelle ligne est déjà en cours d'édition");
                } else {
                    editRow(row);
                    oTable.select.style( "api" );
                    nEditing = row;
                }                
            }},
            {text: '<span class="glyphicon glyphicon-duplicate"></span>Supprimer', className: 'Delete selectionRequired disabled', action: function ( ) {
                var row = this.row({selected: true});
                var selected = row.data();
                var taskId = selected['id'];

                var deleteDialog = $("#dialog");
                if( $(row.node()).hasClass( 'new' ) ) {
                    oTable.rows( row ).remove().draw(false);
                    $("a.btn.btn-default.selectionRequired").addClass("disabled");;
                } else {
                    $("#dialog").dialog({
                        autoOpen: false,
                        modal: true,
                        buttons: {
                            "Confirmer" : {
                                text: "Confirmer", 
                                class: "btn-primary",
                                click: function() {
                                    $(this).dialog("close");
                                    var params = "id=" + taskId; 
								
                                    var url="{{path('_project_task_ajax_delete')}}";

                                    $.ajax( {
                                        type: "POST",
                                        url: url,
                                        data: params,
                                        dataType: "json",
                                        success: function( data ) {
                                            if( data.response == 200 ) {
                                                oTable.rows( row ).remove().draw(false);
                                                $("a.btn.btn-default.selectionRequired").addClass("disabled");;
                                            } else {
                                                alert( "Erreur lors de la suppression" );
                                            }
                                        },
                                        error: function( jqXHR, textStatus, errorThrown ) {
                                            alert( textStatus );
                                        }
                                    });
                                }
                            },
                            "Annuler" : function() {
                                $(this).dialog("close");
                            }
                        },
                        title: "Confirmation de suppression"
                    });

                    $("#dialog").dialog("open");
                }

                deleteDialog.dialog("open");
            }},
            {text: '<span class="glyphicon glyphicon-remove-circle"></span>Annuler', className: 'Cancel', action: function() { projectUtilities.cancelEdit(); } },
            {text: '<span class="glyphicon glyphicon-floppy-disk"></span>Enregistrer', className: 'Save', action: function() {
                saveRow( nEditing );
                nEditing = null;
            }},
        ],
        columns: [
            { width: "300px" },
            { width: "140px", type: "date-euro" },
            { width: "140px", type: "date-euro" },
        ],
        dom: 'l<"clear">Bfrtp',
        language: {
            lengthMenu: "Afficher _MENU_ lignes par page",
            zeroRecords: "Aucune t&acirc;che",
            info: "Page _PAGE_ de _PAGES_",
            infoEmpty: "Aucune t&acirc;che",
            infoFiltered: "(filtr&eacute; de _MAX_ t&acirc;ches)",
            loadingRecords: "Chargement...",
            processing: "Traitement...",
            search: "Recherche:",
            paginate: {
                first: " ",
                last: " ",
                next: " ",
                previous: " "
            }
        },      
        ordering: true,
        rowId: 'id',
        select: {
            style: 'single'
        }
    });
            
    $('#tasks tbody').on( 'click', 'tr', function () {
        if (nEditing == null ) {
            if ( $(this).hasClass('selected') ) {
                $("a.btn.btn-default.selectionRequired").removeClass("disabled");
            } else {
                $("a.btn.btn-default.selectionRequired").addClass("disabled");;
            }
        }
    } );
        
    $( "#tasks" ).keydown(function( event ) { projectUtilities.keydown( event ) } ); 
        
    $("a.btn.btn-default.Cancel, a.btn.btn-default.Save").hide();    
});
    
function editRow( nRow ) {
    var aData = oTable.row( nRow ).data();
    var jqTds = $('>td', nRow );
    jqTds[0].innerHTML = '<input value="'+aData[0]+'" type="text" class="form-control">';
    jqTds[1].innerHTML = '<input value="'+aData[1]+'" type="text" class="form-control datepicker">';
    jqTds[2].innerHTML = '<input value="'+aData[2]+'" type="text" class="form-control datepicker">';
        
    $("input.datepicker").datepicker( { dateFormat: "dd/mm/yy" });
    $( "input[type=text]:visible:first", nRow ).focus();
    $("a.btn.btn-default.New,a.btn.btn-default.selectionRequired").addClass("disabled");
    $("a.btn.btn-default.Cancel, a.btn.btn-default.Save").show();
}
    
function saveRow( nRow ) {
    var jqInputs = $( 'input', nRow );
    var params = "";
    var action = "U";
            
    params = "";
    if( $( nRow ).hasClass( 'new' ) ){
        $( nRow ).removeClass( 'new' );
        action="C";
    } else {
        var rowId = $( nRow ).attr('id');
        params = "id=" + rowId + "&";
    }
        
    params += "pid={{project.id}}&action=" + action + "&taskName=" + jqInputs[0].value + "&targetDate=" + jqInputs[1].value +
        "&finalizeDate=" + jqInputs[2].value;
        
    var url = "{{ path('_project_task_ajax_update') }}";
    $.ajax( {
        type: "POST",
        url: url,
        data: params,
        dataType: "json",
        success: function( data ) {
            if( data.response == 200 ) {
                $(nRow).attr( "id", data.id );
                oTable.cell( nRow, 0 ).data( jqInputs[0].value );
                oTable.cell( nRow, 1 ).data( jqInputs[1].value );
                oTable.cell( nRow, 2 ).data( jqInputs[2].value );
                oTable.row( nRow ).draw();
                oTable.select.style('single');
                $("a.btn.btn-default.New").removeClass("disabled");
                $("a.btn.btn-default.Cancel, a.btn.btn-default.Save").hide();
            } else {
                alert( "Erreur lors de la mise à jour" );
            }
        },
        error: function( jqXHR, textStatus, errorThrown ) {
            alert( errorThrown );
        }
    });
}    
{% endblock %}